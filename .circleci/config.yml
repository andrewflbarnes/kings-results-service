version: 2

project-config:
  caching:
  - &cache_dependencies ${CACHE_VERSION}-dependencies-{{ checksum "pom.xml" }}
  - &cache_dependencies_fallback ${CACHE_VERSION}-dependencies-
  - &cache_test ${CACHE_VERSION}-test-{{ checksum "pom.xml" }}
  - &cache_test_fallback ${CACHE_VERSION}-test-
  - &cache_integration ${CACHE_VERSION}-integration-{{ checksum "pom.xml" }}
  - &cache_integration_fallback ${CACHE_VERSION}-integration-
  - &cache_coverage ${CACHE_VERSION}-coverage-{{ checksum "pom.xml" }}
  - &cache_coverage_fallback ${CACHE_VERSION}-coverage-
  - cache_default_paths: &cache_default_paths
    - ~/.m2
  - cache_coverage_paths: &cache_coverage_paths
    - ~/.m2
    - ~/.sonar/cache
  docker:
  - &build_image circleci/openjdk:8u171-jdk
  - &db_image circleci/postgres:10-alpine
  - docker_build: &docker_build
    # Latest 181 version has a bug with surefire
    - image: *build_image
  - docker_integration_build: &docker_integration_build
    - image: *build_image
    - image: *db_image
  setup_commands:
  - copy_props: &copy_props
      name: Copy circleci test properties
      command: cp database/database-access/src/test/resources/circleci-test.properties database/database-access/src/test/resources/test.properties

jobs:
  build:
    docker: *docker_build
    steps:
    - checkout
    - run: *copy_props
    - restore_cache:
        keys:
        - *cache_dependencies
        - *cache_dependencies_fallback
    - run: mvn package -B -Dmaven.test.skip
    - save_cache:
        paths: *cache_default_paths
        key: *cache_dependencies

  test:
    docker: *docker_build
    steps:
    - checkout
    - run: *copy_props
    - restore_cache:
        keys:
        - *cache_test
        - *cache_dependencies
        - *cache_test_fallback
        - *cache_dependencies_fallback
    - run:
        name: Run unit tests
        command: mvn test -B
    - run:
        name: Save test results
        command: |
          mkdir -p ~/test-results/junit/
          find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
        when: always
    - store_test_results:
        path: ~/test-results
    - store_artifacts:
        path: ~/test-results/junit
    - save_cache:
        paths: *cache_default_paths
        key: *cache_test

  integration-test:
    docker: *docker_integration_build
    steps:
    - checkout
    - run: *copy_props
    - restore_cache:
        keys:
        - *cache_integration
        - *cache_dependencies
        - *cache_integration_fallback
        - *cache_dependencies_fallback
    - run:
        name: Run integration tests
        command: mvn verify -Dtest=none -DfailIfNoTests=false -B
    - run:
        name: Save test results
        command: |
          mkdir -p ~/integration-tests/junit
          find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/integration-tests/junit \;
        when: always
    - store_test_results:
        path: ~/integration-tests
    - store_artifacts:
        path: ~/integration-tests/junit
    - save_cache:
        paths: *cache_default_paths
        key: *cache_integration

  coverage:
    docker: *docker_integration_build
    steps:
    - checkout
    - run: *copy_props
    - restore_cache:
        keys:
        - *cache_coverage
        - *cache_dependencies
        - *cache_coverage_fallback
        - *cache_dependencies_fallback
    - run:
        name: Generate coverage data
        command: mvn verify -P coverage -B
    - run:
        name: Send coverage to sonarcloud.io
        command: |
          if [[ ! -z $CIRCLE_PULL_REQUEST ]]
          then
            mvn sonar:sonar -P sonar -B \
              -Dsonar.pullrequest.base=master \
              -Dsonar.pullrequest.branch=${CIRCLE_BRANCH} \
              -Dsonar.pullrequest.key=${CIRCLE_PULL_REQUEST##*/} \
              -Dsonar.pullrequest.provider=GitHub \
              -Dsonar.pullrequest.github.repository=andrewflbarnes/kings-results-service
          else
            mvn sonar:sonar -Psonar -B -Dsonar.branch.name=${CIRCLE_BRANCH}
          fi
    - run:
        name: Send coverage to coveralls.io
        command: mvn coveralls:report -B -DrepoToken=${COVERALLS_REPO_TOKEN}
    - save_cache:
        paths: *cache_coverage_paths
        key: *cache_coverage
    - store_artifacts:
        path: ./jacoco-report/target/site/jacoco-aggregate

workflows:
  version: 2
  build_test_report:
    jobs:
    - build
    - test:
        requires:
        - build
    - integration-test:
        requires:
        - build
    - coverage:
        requires:
        - test
        - integration-test

